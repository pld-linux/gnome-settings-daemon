--- gnome-settings-daemon-3.6.0/gnome-settings-daemon/gnome-settings-session.c.old	2012-10-02 21:47:26.463470258 +0200
+++ gnome-settings-daemon-3.6.0/gnome-settings-daemon/gnome-settings-session.c	2012-10-02 21:46:30.047109277 +0200
@@ -30,6 +30,7 @@
 #include "gnome-settings-session.h"
 
 #ifdef HAVE_SYSTEMD
+#include <systemd/sd-daemon.h>
 #include <systemd/sd-login.h>
 
 typedef struct
@@ -130,10 +131,9 @@ struct GnomeSettingsSessionPrivate
 {
 #ifdef HAVE_SYSTEMD
         GSource                   *sd_source;
-#else
+#endif
 	GDBusProxy		*proxy_session;
 	GCancellable		*cancellable;
-#endif
 	gchar			*session_id;
 	GnomeSettingsSessionState state;
 };
@@ -237,7 +237,7 @@ sessions_changed (gpointer user_data)
         return TRUE;
 }
 
-#else /* HAVE_SYSTEMD */
+#endif /* HAVE_SYSTEMD */
 
 static void
 gnome_settings_session_proxy_signal_cb (GDBusProxy *proxy,
@@ -371,22 +371,26 @@ got_manager_proxy_cb (GObject *source_ob
 	g_object_unref (proxy_manager);
 }
 
-#endif /* HAVE_SYSTEMD */
-
 static void
 gnome_settings_session_init (GnomeSettingsSession *session)
 {
 	session->priv = GNOME_SETTINGS_SESSION_GET_PRIVATE (session);
 
 #ifdef HAVE_SYSTEMD
-        sd_pid_get_session (getpid(), &session->priv->session_id);
-
-        session->priv->sd_source = sd_source_new ();
-        g_source_set_callback (session->priv->sd_source, sessions_changed, session, NULL);
-        g_source_attach (session->priv->sd_source, NULL);
-
-        sessions_changed (session);
-#else
+	session->priv->sd_source = NULL;
+	
+	if (sd_booted () > 0) {
+    		sd_pid_get_session (getpid(), &session->priv->session_id);
+
+    		session->priv->sd_source = sd_source_new ();
+    		g_source_set_callback (session->priv->sd_source, sessions_changed, session, NULL);
+    		g_source_attach (session->priv->sd_source, NULL);
+
+    		sessions_changed (session);
+    	
+    		return;
+        }
+#endif
 	session->priv->cancellable = g_cancellable_new ();
 
 	/* connect to ConsoleKit */
@@ -399,7 +403,6 @@ gnome_settings_session_init (GnomeSettin
 				  session->priv->cancellable,
 				  got_manager_proxy_cb,
 				  session);
-#endif
 }
 
 static void
@@ -415,15 +418,16 @@ gnome_settings_session_finalize (GObject
         if (session->priv->sd_source != NULL) {
                 g_source_destroy (session->priv->sd_source);
                 g_source_unref (session->priv->sd_source);
+                goto out;
         }
-#else
+#endif
 	g_cancellable_cancel (session->priv->cancellable);
 
 	if (session->priv->proxy_session != NULL)
 		g_object_unref (session->priv->proxy_session);
 	g_object_unref (session->priv->cancellable);
-#endif
 
+out:
 	G_OBJECT_CLASS (gnome_settings_session_parent_class)->finalize (object);
 }
 
--- gnome-settings-daemon-3.6.0/plugins/common/gsd-power-helper.c.old	2012-10-02 21:33:48.061237388 +0200
+++ gnome-settings-daemon-3.6.0/plugins/common/gsd-power-helper.c	2012-10-02 21:43:37.094712921 +0200
@@ -79,7 +79,7 @@ systemd_hibernate (void)
         g_object_unref (bus);
 }
 
-#else /* HAVE_SYSTEMD */
+#endif /* HAVE_SYSTEMD */
 
 static void
 consolekit_stop_cb (GObject *source_object,
@@ -170,34 +170,37 @@ upower_hibernate (GDBusProxy *upower_pro
                            -1, NULL,
                            upower_sleep_cb, NULL);
 }
-#endif /* HAVE_SYSTEMD */
+
 
 void
 gsd_power_suspend (GDBusProxy *upower_proxy)
 {
 #ifdef HAVE_SYSTEMD
-	systemd_suspend ();
-#else
-	upower_suspend (upower_proxy);
+	if (sd_booted () > 0)
+		systemd_suspend ();
+	else
 #endif
+		upower_suspend (upower_proxy);
 }
 
 void
 gsd_power_poweroff (void)
 {
 #ifdef HAVE_SYSTEMD
-	systemd_stop ();
-#else
-	consolekit_stop ();
+	if (sd_booted () > 0)
+		systemd_stop ();
+	else
 #endif
+		consolekit_stop ();
 }
 
 void
 gsd_power_hibernate (GDBusProxy *upower_proxy)
 {
 #ifdef HAVE_SYSTEMD
-	systemd_hibernate ();
-#else
-	upower_hibernate (upower_proxy);
+	if (sd_booted () > 0)
+		systemd_hibernate ();
+	else
 #endif
+		upower_hibernate (upower_proxy);
 }
